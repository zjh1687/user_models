
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 2.13.0
 * Query Engine version: 833ab05d2a20e822f6736a39a27de4fc8f6b3e49
 */
Prisma.prismaVersion = {
  client: "2.13.0",
  engine: "833ab05d2a20e822f6736a39a27de4fc8f6b3e49"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */

Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.TestScalarFieldEnum = makeEnum({
  test_idx: 'test_idx',
  test_value: 'test_value',
  test_deletion: 'test_deletion'
});

exports.Prisma.Board_cateScalarFieldEnum = makeEnum({
  tca_idx: 'tca_idx',
  tca_title: 'tca_title'
});

exports.Prisma.Board_postScalarFieldEnum = makeEnum({
  bpo_idx: 'bpo_idx',
  bpo_bca_idx: 'bpo_bca_idx',
  bpo_title: 'bpo_title',
  bpo_desc: 'bpo_desc'
});

exports.Prisma.Rs_memberScalarFieldEnum = makeEnum({
  mem_idx: 'mem_idx',
  mem_userpw: 'mem_userpw',
  mem_userid: 'mem_userid',
  mem_email: 'mem_email',
  mem_lastlogin_datetime: 'mem_lastlogin_datetime',
  mem_lastlogin_timestamp: 'mem_lastlogin_timestamp',
  mem_inactive_check: 'mem_inactive_check',
  mem_is_admin: 'mem_is_admin',
  mem_point: 'mem_point'
});

exports.Prisma.Rs_mem_login_logScalarFieldEnum = makeEnum({
  mll_idx: 'mll_idx',
  mll_success: 'mll_success',
  mll_mem_idx: 'mll_mem_idx',
  mll_email: 'mll_email',
  mll_datetime: 'mll_datetime',
  mll_reason: 'mll_reason',
  mll_timestamp: 'mll_timestamp',
  mll_ip: 'mll_ip',
  mll_fail_count: 'mll_fail_count'
});

exports.Prisma.Rs_mgrScalarFieldEnum = makeEnum({
  mgr_id: 'mgr_id',
  mgr_title: 'mgr_title',
  mgr_datetime: 'mgr_datetime',
  mgr_timestemp: 'mgr_timestemp'
});

exports.Prisma.Rs_mgr_memScalarFieldEnum = makeEnum({
  mgm_mgr_idx: 'mgm_mgr_idx',
  mgm_mem_idx: 'mgm_mem_idx',
  mgm_datetime: 'mgm_datetime',
  mgm_timestemp: 'mgm_timestemp'
});

exports.Prisma.Rs_point_logScalarFieldEnum = makeEnum({
  poi_mem_idx: 'poi_mem_idx',
  poi_mem_id: 'poi_mem_id',
  poi_inc_poi: 'poi_inc_poi',
  poi_type: 'poi_type',
  poi_datetime: 'poi_datetime',
  poi_timestemp: 'poi_timestemp'
});

exports.Prisma.Rs_pointScalarFieldEnum = makeEnum({
  idx: 'idx',
  poi_mem_id: 'poi_mem_id',
  poi_point: 'poi_point',
  poi_datetime: 'poi_datetime',
  poi_timestemp: 'poi_timestemp'
});

exports.Prisma.Rs_board_categoryScalarFieldEnum = makeEnum({
  cat_idx: 'cat_idx',
  cat_title: 'cat_title'
});

exports.Prisma.Rs_board_commentScalarFieldEnum = makeEnum({
  cmt_idx: 'cmt_idx',
  cmt_content: 'cmt_content',
  cmt_mem_idx: 'cmt_mem_idx',
  cmt_mem_id: 'cmt_mem_id',
  cmt_mem_nick: 'cmt_mem_nick',
  cmt_pass: 'cmt_pass',
  cmt_create_datetime: 'cmt_create_datetime',
  cmt_create_timestemp: 'cmt_create_timestemp',
  cmt_update_datetime: 'cmt_update_datetime',
  cmt_update_timestemp: 'cmt_update_timestemp'
});

exports.Prisma.Rs_board_postScalarFieldEnum = makeEnum({
  pst_idx: 'pst_idx',
  pst_title: 'pst_title',
  pst_content: 'pst_content',
  pst_pass: 'pst_pass',
  pst_create_datetime: 'pst_create_datetime',
  pst_create_timestemp: 'pst_create_timestemp',
  pst_update_datetime: 'pst_update_datetime',
  pst_update_timestemp: 'pst_update_timestemp',
  pst_hit: 'pst_hit',
  pst_cat_idx: 'pst_cat_idx',
  pst_mem_idx: 'pst_mem_idx',
  pst_mem_id: 'pst_mem_id',
  pst_mem_nick: 'pst_mem_nick'
});

exports.Prisma.Rs_mem_authScalarFieldEnum = makeEnum({
  auth_idx: 'auth_idx',
  auth_email: 'auth_email',
  authNumber: 'authNumber',
  auth_datetime: 'auth_datetime'
});

exports.Prisma.Rs_mem_tokenScalarFieldEnum = makeEnum({
  mtk_idx: 'mtk_idx',
  mtk_refresh: 'mtk_refresh',
  mtk_email: 'mtk_email'
});

exports.Prisma.Rs_board_likebad_logScalarFieldEnum = makeEnum({
  log_idx: 'log_idx',
  log_cnt_like: 'log_cnt_like',
  log_cnt_bad: 'log_cnt_bad',
  log_update_datetime: 'log_update_datetime',
  log_update_timestemp: 'log_update_timestemp'
});

exports.Prisma.Rs_board_likebad_mapScalarFieldEnum = makeEnum({
  blm_idx: 'blm_idx',
  blm_user_idx: 'blm_user_idx',
  blm_post_idx: 'blm_post_idx',
  blm_cmt_idx: 'blm_cmt_idx',
  blm_update_timestemp: 'blm_update_timestemp',
  blm_update_datetime: 'blm_update_datetime',
  blm_cnt_like: 'blm_cnt_like',
  blm_cnt_bad: 'blm_cnt_bad'
});

exports.Prisma.Rs_noteScalarFieldEnum = makeEnum({
  not_idx: 'not_idx',
  not_recv_id: 'not_recv_id',
  not_send_id: 'not_send_id',
  not_type: 'not_type',
  not_title: 'not_title',
  not_relate_post_idx: 'not_relate_post_idx',
  not_content: 'not_content',
  not_datetime: 'not_datetime',
  not_timestemp: 'not_timestemp'
});

exports.Prisma.Rs_board_adminScalarFieldEnum = makeEnum({
  adm_idx: 'adm_idx',
  adm_mem_idx: 'adm_mem_idx',
  adm_mem_id: 'adm_mem_id'
});

exports.Prisma.Pris_memberScalarFieldEnum = makeEnum({
  mem_idx: 'mem_idx',
  mem_email: 'mem_email',
  mem_password: 'mem_password'
});

exports.Prisma.Rs_menuScalarFieldEnum = makeEnum({
  menu_idx: 'menu_idx',
  menu_code: 'menu_code',
  ins_date: 'ins_date',
  upd_date: 'upd_date',
  menu_name: 'menu_name'
});

exports.Prisma.Test2ScalarFieldEnum = makeEnum({
  test_idx: 'test_idx',
  test_unique: 'test_unique',
  test_deletion: 'test_deletion'
});

exports.Prisma.Pris_logScalarFieldEnum = makeEnum({
  id: 'id',
  email: 'email'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});


exports.Prisma.ModelName = makeEnum({
  test: 'test',
  board_cate: 'board_cate',
  board_post: 'board_post',
  rs_member: 'rs_member',
  rs_mem_login_log: 'rs_mem_login_log',
  rs_mgr: 'rs_mgr',
  rs_mgr_mem: 'rs_mgr_mem',
  rs_point_log: 'rs_point_log',
  rs_point: 'rs_point',
  rs_board_category: 'rs_board_category',
  rs_board_comment: 'rs_board_comment',
  rs_board_post: 'rs_board_post',
  rs_mem_auth: 'rs_mem_auth',
  rs_mem_token: 'rs_mem_token',
  rs_board_likebad_log: 'rs_board_likebad_log',
  rs_board_likebad_map: 'rs_board_likebad_map',
  rs_note: 'rs_note',
  rs_board_admin: 'rs_board_admin',
  pris_member: 'pris_member',
  rs_menu: 'rs_menu',
  test2: 'test2',
  pris_log: 'pris_log'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma-client-js/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
